{"TemplateOriginalID": "T43", "TemplateFrequency": 39284, "TemplateOriginalFrequency": 8, "TemplateID": 0, "TemplateOriginalPattern": "processing substream token: <P>", "TemplatePattern": "processing substream token: <P> "}
{"TemplateOriginalID": "T39", "TemplateFrequency": 460, "TemplateOriginalFrequency": 2, "TemplateID": 1, "TemplateOriginalPattern": "Failed to get protocol output java.net.SocketTimeoutException: Read timed out at", "TemplatePattern": "Failed to get protocol output <P> "}
{"TemplateOriginalID": "T8", "TemplateFrequency": 200, "TemplateOriginalFrequency": 200, "TemplateID": 2, "TemplateOriginalPattern": "http.accept = <P>", "TemplatePattern": "http.accept = <P>"}
{"TemplateOriginalID": "T4", "TemplateFrequency": 200, "TemplateOriginalFrequency": 200, "TemplateID": 3, "TemplateOriginalPattern": "http.timeout = <P>", "TemplatePattern": "http.timeout = <P>"}
{"TemplateOriginalID": "T6", "TemplateFrequency": 200, "TemplateOriginalFrequency": 114, "TemplateID": 4, "TemplateOriginalPattern": "http.agent = After Nutch Paper Spider/Nutch-1.11-SNAPSHOT", "TemplatePattern": "http.agent = <P> Nutch Paper Spider/Nutch-1.11-SNAPSHOT "}
{"TemplateOriginalID": "T7", "TemplateFrequency": 200, "TemplateOriginalFrequency": 200, "TemplateID": 5, "TemplateOriginalPattern": "http.accept.language = <P>", "TemplatePattern": "http.accept.language = <P>"}
{"TemplateOriginalID": "T5", "TemplateFrequency": 200, "TemplateOriginalFrequency": 200, "TemplateID": 6, "TemplateOriginalPattern": "http.content.limit = <P>", "TemplatePattern": "http.content.limit = <P>"}
{"TemplateOriginalID": "T2", "TemplateFrequency": 200, "TemplateOriginalFrequency": 200, "TemplateID": 7, "TemplateOriginalPattern": "http.proxy.host = null", "TemplatePattern": "http.proxy.host = null"}
{"TemplateOriginalID": "T3", "TemplateFrequency": 200, "TemplateOriginalFrequency": 200, "TemplateID": 8, "TemplateOriginalPattern": "http.proxy.port = <P>", "TemplatePattern": "http.proxy.port = <P>"}
{"TemplateOriginalID": "T12", "TemplateFrequency": 110, "TemplateOriginalFrequency": 16, "TemplateID": 9, "TemplateOriginalPattern": "Unknown line in robots.txt file (size <P>): <!<P> <P> <P> <P> is <P> but <P> The path to <P> in <P> must be fixed! <P>>", "TemplatePattern": "Unknown line in robots.txt file (size <P>): <P> "}
{"TemplateOriginalID": "T0", "TemplateFrequency": 100, "TemplateOriginalFrequency": 100, "TemplateID": 10, "TemplateOriginalPattern": "Unable to load native-hadoop library for your platform... using builtin-java classes where applicable", "TemplatePattern": "Unable to load native-hadoop library for your platform... using builtin-java classes where applicable"}
{"TemplateOriginalID": "T13", "TemplateFrequency": 50, "TemplateOriginalFrequency": 50, "TemplateID": 11, "TemplateOriginalPattern": "HTML content type returned for robots.txt file: <P>", "TemplatePattern": "HTML content type returned for robots.txt file: <P>"}
{"TemplateOriginalID": "T58", "TemplateFrequency": 20, "TemplateOriginalFrequency": 2, "TemplateID": 12, "TemplateOriginalPattern": "Failed to get protocol <P> <P> <P> (<P> <P>) at <P>(Native Method) at <P> at <P> at java.net.AbstractPlainSocketImpl.connect(<P>) at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392) at java.net.Socket.connect(Socket.java:576) at org.apache.nutch.protocol.http.HttpResponse.<init>(HttpResponse.java:123) at org.apache.nutch.protocol.http.Http.getResponse(Http.java:70) at org.apache.nutch.protocol.http.api.HttpBase.getProtocolOutput(HttpBase.java:255) at org.apache.nutch.fetcher.Fetcher$FetcherThread.run(Fetcher.java:766)", "TemplatePattern": "Failed to get protocol <P> "}
{"TemplateOriginalID": "T53", "TemplateFrequency": 18, "TemplateOriginalFrequency": 6, "TemplateID": 13, "TemplateOriginalPattern": "<P> <P> with <P> <P>", "TemplatePattern": "<P> with <P> "}
{"TemplateOriginalID": "T64", "TemplateFrequency": 14, "TemplateOriginalFrequency": 8, "TemplateID": 14, "TemplateOriginalPattern": "Failed to get protocol <P> org.apache.nutch.protocol.http.HttpResponse.readLine(<P>) at org.apache.nutch.protocol.http.HttpResponse.parseStatusLine(HttpResponse.java:415) at org.apache.nutch.protocol.http.HttpResponse.<init>(HttpResponse.java:216) at org.apache.nutch.protocol.http.Http.getResponse(Http.java:70) at org.apache.nutch.protocol.http.api.HttpBase.getProtocolOutput(HttpBase.java:255) at org.apache.nutch.fetcher.Fetcher$FetcherThread.run(Fetcher.java:766)", "TemplatePattern": "Failed to get protocol <P> org.apache.nutch.protocol.http.HttpResponse.readLine(<P>) at org.apache.nutch.protocol.http.HttpResponse.parseStatusLine(HttpResponse.java:415) at org.apache.nutch.protocol.http.HttpResponse.<init>(HttpResponse.java:216) at org.apache.nutch.protocol.http.Http.getResponse(Http.java:70) at org.apache.nutch.protocol.http.api.HttpBase.getProtocolOutput(HttpBase.java:255) at <P> "}
{"TemplateOriginalID": "T14", "TemplateFrequency": 8, "TemplateOriginalFrequency": 8, "TemplateID": 15, "TemplateOriginalPattern": "<P> delay <P> <P> value - so <P> all <P> <P>", "TemplatePattern": "<P> delay <P> <P> value - so <P> all <P> <P>"}
{"TemplateOriginalID": "T31", "TemplateFrequency": 8, "TemplateOriginalFrequency": 4, "TemplateID": 16, "TemplateOriginalPattern": "Problem processing robots.txt for <P>", "TemplatePattern": "Problem processing robots.txt for <P> "}
{"TemplateOriginalID": "T40", "TemplateFrequency": 4, "TemplateOriginalFrequency": 4, "TemplateID": 17, "TemplateOriginalPattern": "<P> not found <P> object at <P> <P> position <P>", "TemplatePattern": "<P> not found <P> object at <P> <P> position <P>"}
{"TemplateOriginalID": "T1", "TemplateFrequency": 4, "TemplateOriginalFrequency": 4, "TemplateID": 18, "TemplateOriginalPattern": "<P> native library not loaded", "TemplatePattern": "<P> native library not loaded"}
{"TemplateOriginalID": "T63", "TemplateFrequency": 2, "TemplateOriginalFrequency": 2, "TemplateID": 19, "TemplateOriginalPattern": "<P> <P> <P> <P> at <P> at <P> at <P> at <P> at <P> at <P> at <P> at <P> at <P> at <P> at <P> at <P> at <P> at <P> at <P> at <P> at <P>", "TemplatePattern": "<P> <P> <P> <P> at <P> at <P> at <P> at <P> at <P> at <P> at <P> at <P> at <P> at <P> at <P> at <P> at <P> at <P> at <P> at <P> at <P>"}
